name: Deploy

on:
  push:
    branches: [ master ]

jobs:
#  app-tests:
#
#    runs-on: ubuntu-latest
#
#    services:
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: yes
#          MYSQL_DATABASE: technicalbeatnik
#        ports:
#          - 3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
#    steps:
#      - uses: actions/checkout@v1
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#      - name: Install Composer Dependencies
#        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
#      - name: Install NPM Dependencies
#        run: npm install
#      - name: Generate key
#        run: php artisan key:generate
#      - name: Execute tests (Unit and Feature tests) using PHPUnit
#        env:
#          DB_PORT: ${{ job.services.mysql.ports[3306] }}
#        run: ./vendor/bin/phpunit

  composer-and-directories:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Directory Permissions Two
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          script: |
            cd /var/www/technicalbeatnik.co.uk
            echo ${{ secrets.PASSWORD }} | sudo -S chgrp -R www-data storage bootstrap/cache
            echo ${{ secrets.PASSWORD }} | sudo -S chmod -R ug+rwx storage bootstrap/cache
            php artisan key:generate
            php artisan migrate --force
            php artisan cache:clear --force
            php artisan config:clear
            php artisan storage:link
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
          check-latest: true
      - name: Install NPM dependencies
        run: npm install
      - name: Compile assets for production
        run: npm run production

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
        with:
          source: "."
          target: "/var/www/technicalbeatnik.co.uk"
